name: release

on:
  push:  # ‰ªª‰Ωï push ÈÉΩ‰ºöËß¶ÂèëÂ∑•‰ΩúÊµÅ
    branches:
      - '**'

permissions:
  contents: write

jobs:
  build-desktop:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install XGO
        run: |
          go install src.techknowlogick.com/xgo@latest
      
      - name: Pull Docker Image
        run: |
          docker pull ghcr.io/techknowlogick/xgo:latest

      - name: Get Version
        id: version
        uses: actions/github-script@v7
        with:
          script: |
            const rawTag = '${{ github.ref_name }}';
            const version = rawTag.replace(/^v/, '');
            core.setOutput('version', version);

      - name: Build Binary
        run: |
          targets=(
              "darwin amd64 _amd64 macOS"
              "darwin arm64 _arm64 macOS"
              "windows amd64 .exe Windows"
              "windows 386 _i386.exe Windows"
          )
          mkdir -p build

          for entry in "${targets[@]}"; do
            (
              IFS=' ' read -r -a parts <<< "$entry"
              os="${parts[0]}"
              arch="${parts[1]}"
              suffix="${parts[2]}"
              display_os="${parts[3]}"
              log_prefix="[${os}-${arch}]"
              target_dir="dist/${os}_${arch}"
              mkdir -p "$target_dir"
              echo "${log_prefix} üöÄ Building for $os/$arch..."
              xgo \
                  --targets="$os/$arch" \
                  --out "krillinai_desktop" \
                  --dest "$target_dir" \
                  ./cmd/desktop 2>&1 | sed "s/^/${log_prefix} /"
              binary_name="KrillinAI_${{ steps.version.outputs.version }}_Desktop_${display_os}${suffix}"
              mv "$target_dir"/krillinai_desktop* "build/$binary_name"
              echo "${log_prefix} ‚úÖ Built: build/$binary_name"
            ) &
          done
          wait
          echo "‚ú® All concurrent tasks completed!"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: build/*
          retention-days: 1

  release:
    needs: build-desktop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
